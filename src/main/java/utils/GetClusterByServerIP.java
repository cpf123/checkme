package utils;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import org.springframework.lang.Nullable;

public class GetClusterByServerIP {

    public static void main(String[] args) {
        String ip0 = "10.178.19.207";
        String ip1 = "10.126.101.25,10.126.80.145,10.135.0.199,10.135.11.231,10.135.12.93,10.135.12.94,10.135.12.96,10.135.13.204,10.135.13.228,10.135.13.83,10.135.13.9,10.144.134.119,10.144.134.191,10.144.134.242,10.144.134.252,10.144.135.14,10.144.135.15,10.144.135.32,10.144.135.33,10.144.135.41,10.144.135.46,10.144.135.47,10.144.135.48,10.144.135.51,10.144.135.52,10.144.135.53,10.144.135.54,10.144.135.60,10.144.135.61,10.144.135.62,10.144.135.72,10.144.135.74,10.144.49.109,10.144.49.147,10.144.97.152,10.145.116.13,10.145.116.34,10.145.47.98,10.145.50.78,10.148.0.215,10.148.10.214,10.148.10.231,10.148.10.67,10.148.10.70,10.148.10.92,10.148.11.39,10.148.12.90,10.148.17.74,10.148.4.86,10.176.103.66,10.177.35.72,10.177.35.88,10.178.6.165,10.178.6.207,10.178.7.77,10.178.7.99";
        String ip2 = "10.144.105.68,10.144.117.194,10.144.130.7,10.144.72.132,10.145.124.154,10.145.124.164,10.167.46.78,10.177.81.133,10.177.81.151,10.177.81.196";
        String ip3 = "10.135.0.199,10.135.11.231,10.135.12.93,10.135.12.94,10.135.13.204,10.135.13.228,10.135.13.83,10.135.13.9,10.144.134.119,10.144.134.191,10.144.134.242,10.144.134.252,10.144.135.14,10.144.135.15,10.144.135.187,10.144.135.32,10.144.135.41,10.144.135.46,10.144.135.47,10.144.135.48,10.144.135.51,10.144.135.52,10.144.135.53,10.144.135.54,10.144.135.60,10.144.135.61,10.144.135.62,10.144.135.72,10.144.135.74,10.144.45.55,10.144.48.8,10.144.49.109,10.144.49.147,10.145.116.13,10.145.139.237,10.145.140.46,10.148.0.215,10.148.10.214,10.148.10.67,10.148.10.70,10.148.11.14,10.148.12.90,10.148.17.74,10.148.9.161,10.148.9.67,10.176.53.102,10.178.19.207,10.178.6.165,10.178.7.99";
        String ip4 = "10.144.100.112,10.144.101.182,10.144.103.186,10.144.32.65,10.144.98.111,10.145.100.69,10.145.111.102,10.145.111.104,10.145.111.93,10.145.111.96,10.145.115.8,10.145.115.88,10.145.116.155,10.145.116.228,10.145.124.216,10.145.124.222,10.145.124.228,10.145.99.135,10.145.99.211,10.145.99.228";
        String ip5 = "10.144.117.194,10.177.81.205,10.177.82.153,10.177.82.32,10.126.101.25,10.126.101.75,10.126.80.145,10.126.82.23,10.144.109.87,10.144.36.134,10.144.37.124,10.144.37.143,10.144.37.193,10.144.37.72,10.144.38.109,10.144.38.39,10.144.38.58,10.144.38.7,10.144.67.168,10.144.68.92,10.144.69.10,10.144.69.252,10.144.72.243,10.144.75.176,10.144.79.230,10.144.81.213,10.144.83.167,10.144.83.85,10.144.99.205,10.145.102.134,10.145.34.71,10.145.36.223,10.145.37.53,10.145.37.75,10.145.84.140,10.148.0.215,10.148.10.214,10.148.10.231,10.148.10.70,10.148.10.92,10.148.11.14,10.148.11.39,10.148.11.85,10.148.12.90,10.148.17.74,10.148.3.152,10.148.4.86,10.148.8.46,10.148.9.161,10.148.9.67,10.176.53.102,10.176.53.112,10.176.53.115,10.176.53.147,10.176.53.149,10.176.53.178,10.176.53.214,10.176.53.56,10.178.6.165,10.178.6.207,10.178.7.77,10.178.7.99,10.144.56.150,10.144.82.87,10.144.92.124,10.145.133.86,10.145.33.193,10.145.34.69,10.145.46.52,10.145.51.227,10.167.31.14,10.177.42.216,10.177.71.101,10.177.71.68,10.177.73.112,10.177.73.38,10.177.73.80,10.177.78.208,10.177.78.214,10.177.79.35,10.177.79.37,10.177.79.45";
        String ip6 = "10.144.109.80,10.144.56.150,10.144.82.87,10.144.92.124,10.145.133.86,10.145.33.193,10.145.34.69,10.145.46.52,10.145.51.227,10.177.42.216,10.177.71.101,10.177.71.68,10.177.73.112,10.177.73.38,10.177.73.80,10.177.78.208,10.177.78.214,10.177.79.35,10.177.79.37,10.177.79.45";
        String ip7 = "10.144.105.68,10.144.117.194,10.144.130.7,10.144.72.132,10.145.124.154,10.145.124.164,10.177.81.133,10.177.81.151,10.177.81.196,10.177.81.205,10.177.82.153,10.177.82.32";
        String ip8 = "10.126.101.25,10.126.101.75,10.126.80.145,10.126.82.23,10.144.109.87,10.144.36.134,10.144.37.124,10.144.37.143,10.144.37.193,10.144.37.72,10.144.38.109,10.144.38.39,10.144.38.58,10.144.38.7,10.144.67.168,10.144.68.92,10.144.69.10,10.144.69.252,10.144.72.243,10.144.75.176,10.144.79.230,10.144.81.213,10.144.83.167,10.144.83.85,10.144.99.205,10.145.102.134,10.145.34.71,10.145.36.223,10.145.37.53,10.145.37.75,10.145.84.140,10.148.0.215,10.148.10.214,10.148.10.231,10.148.10.70,10.148.10.92,10.148.11.14,10.148.11.39,10.148.11.85,10.148.12.90,10.148.17.74,10.148.3.152,10.148.4.86,10.148.8.46,10.148.9.161,10.148.9.67,10.176.53.102,10.176.53.112,10.176.53.115,10.176.53.147,10.176.53.149,10.176.53.178,10.176.53.214,10.176.53.56,10.178.6.165,10.178.6.207,10.178.7.77,10.178.7.99";
        String ip9 = "10.144.52.68,10.144.56.115,10.144.56.56,10.144.63.124,10.145.51.4,10.145.52.188,10.176.95.33,10.177.106.4,10.177.96.111";
        String ip10 = "10.126.101.25,10.126.101.75,10.126.80.145,10.126.82.23,10.135.0.199,10.135.11.231,10.135.12.93,10.135.12.94,10.135.12.96,10.135.13.204,10.135.13.228,10.135.13.83,10.135.13.9,10.144.97.152,10.145.47.2,10.145.47.98,10.148.0.215,10.148.10.214,10.148.10.231,10.148.10.67,10.148.10.70,10.148.10.92,10.148.11.14,10.148.11.39,10.148.11.85,10.148.12.90,10.148.17.74,10.148.3.152,10.148.4.86,10.148.8.46,10.148.9.138,10.148.9.161,10.148.9.67,10.177.35.61,10.177.35.63,10.178.6.165,10.178.6.207,10.178.7.77,10.178.7.99";
        String ip11 = "10.144.125.251,10.144.139.127,10.144.139.183,10.144.77.58,10.144.79.245,10.144.80.26,10.144.92.171,10.144.93.233,10.144.96.45,10.144.97.45,10.145.109.23,10.145.131.30,10.145.131.89,10.145.133.219,10.145.135.125,10.145.136.151,10.145.136.165,10.145.136.180,10.145.136.188,10.145.136.230,10.145.136.237,10.145.136.36,10.145.136.74,10.145.137.13,10.145.137.47,10.145.57.120,10.145.77.250,10.145.80.17,10.145.89.210,10.145.94.155,10.145.94.218,10.145.98.69,10.176.106.49,10.176.35.138,10.176.57.222,10.176.57.244,10.176.57.39,10.176.57.52,10.176.57.91,10.176.57.95,10.176.59.177,10.176.60.101,10.176.61.24,10.176.61.37,10.176.61.59,10.176.68.196,10.177.58.169,10.177.58.183,10.177.58.190,10.177.58.193,10.177.58.204,10.177.58.206,10.177.58.231,10.177.58.235,10.177.58.237,10.177.58.239,10.177.58.242,10.177.58.252,10.177.58.85,10.177.59.2,10.177.75.132,10.177.76.110,10.177.76.138,10.177.76.178,10.177.76.179,10.177.76.217,10.177.77.169,10.177.77.62,10.177.81.141,10.177.81.17,10.177.84.128,10.177.84.212,10.177.86.54,10.177.88.126,10.177.88.204,10.177.88.205,10.177.90.27,10.177.94.111";
        String ip12 = "10.126.101.25,10.126.101.75,10.126.80.145,10.126.82.23,10.135.0.199,10.135.11.231,10.135.12.93,10.135.12.94,10.135.12.96,10.135.13.204,10.135.13.228,10.135.13.83,10.135.13.9,10.148.0.215,10.148.10.214,10.148.10.231,10.148.10.67,10.148.10.70,10.148.10.92,10.148.11.14,10.148.11.39,10.148.11.85,10.148.12.90,10.148.17.74,10.148.3.152,10.148.4.86,10.148.8.46,10.148.9.138,10.148.9.161,10.148.9.67,10.178.6.165,10.178.6.207,10.178.7.77,10.178.7.99";
        String ip13 = "10.144.133.25,10.144.134.242,10.144.134.245,10.144.134.251,10.144.134.57,10.144.135.15,10.144.135.32,10.144.135.41,10.144.135.46,10.144.135.48,10.144.135.49,10.144.135.50,10.144.135.51,10.144.135.52,10.144.135.53,10.144.135.57,10.144.135.60,10.144.135.62,10.144.135.66,10.144.135.69";
        String ip14 = "10.162.0.12,10.162.10.101,10.162.10.104,10.162.10.105,10.162.10.109,10.162.10.231,10.162.10.235,10.162.10.39,10.162.10.42,10.162.10.69,10.162.10.71,10.162.10.74,10.162.10.75,10.162.10.9,10.162.11.2,10.162.11.3,10.162.18.10,10.162.18.15,10.162.18.23,10.162.18.33,10.162.18.40,10.162.18.9,10.162.5.77,10.162.5.88,10.162.8.152,10.162.9.42";
        String ip15 = "10.144.130.7,10.145.124.164,10.145.57.110,10.176.59.155,10.176.72.85,10.176.74.39,10.176.94.13,10.177.102.211,10.177.81.133,10.177.81.196";
        String ip16="10.144.121.88,10.144.134.14,10.144.38.151,10.144.73.13,10.145.46.196";
        String[] split1 = ip16.split(",");
        Set<String> jiqunset = new HashSet<>();
        for (String s : split1) {
            String message = doGet("http://api.cmdb.58corp.com/cluster/getclusterbyip/" + s + "?token=8176b5f0e0acea9cdb5279a4531ea760");
            JSONObject jsonObject = JSONObject.parseObject(message);
            JSONArray data = (JSONArray) jsonObject.getOrDefault("data", new JSONArray());
            for (Object datum : data) {
                JSONObject datum1 = (JSONObject) datum;
                String fullpathShow = datum1.getOrDefault("fullpath_show", "-").toString();

                String[] split = fullpathShow.split(",");
                String jiqun = split[3];
                if ("data".equals(jiqun)) {
                    jiqun = split[4];
                }
                jiqunset.add(jiqun);

//                if (jiqun.equals("lego_scf_location")) {
//                    System.out.println(s);
//                }
            }
        }
        for (String s : jiqunset) {
            System.out.println(s);
        }

    }

    public static String doGet(String httpUrl) {
        //链接
        HttpURLConnection connection = null;
        InputStream is = null;
        BufferedReader br = null;
        StringBuffer result = new StringBuffer();
        try {
            //创建连接
            URL url = new URL(httpUrl);
            connection = (HttpURLConnection) url.openConnection();
            //设置请求方式
            connection.setRequestMethod("GET");
            //设置连接超时时间
            connection.setReadTimeout(15000);
            //开始连接
            connection.connect();
            //获取响应数据
            if (connection.getResponseCode() == 200) {
                //获取返回的数据
                is = connection.getInputStream();
                if (null != is) {
                    br = new BufferedReader(new InputStreamReader(is, "UTF-8"));
                    String temp = null;
                    while (null != (temp = br.readLine())) {
                        result.append(temp);
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (null != br) {
                try {
                    br.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            if (null != is) {
                try {
                    is.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            //关闭远程连接
            connection.disconnect();
        }
        return result.toString();
    }


}
